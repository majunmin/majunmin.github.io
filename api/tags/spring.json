{"name":"spring","slug":"spring","count":3,"postlist":[{"title":"Spring-AOP详解","uid":"bfa33a5fe2e0aa639906339c30ac4485","slug":"Spring-AOP详解","date":"2019-06-04T06:51:48.000Z","updated":"2022-03-03T15:50:52.810Z","comments":true,"path":"api/articles/Spring-AOP详解.json","keywords":null,"cover":[],"text":"springDOC 将重复性的逻辑代码横切出来其实很容易(我们简单可认为就是封装成一个类就好了)，但我们要将这些被我们横切出来的逻辑代码融合到业务逻辑中，来完成和之前(没抽取前)一样的功能！这就是AOP首要解决的问题了！这样一来，我们就在写业务时只关心业务代码，而不用关心与业务无...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"spring","slug":"spring","count":3,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":3,"path":"api/tags/spring.json"},{"name":"aop","slug":"aop","count":1,"path":"api/tags/aop.json"},{"name":"动态代理","slug":"动态代理","count":1,"path":"api/tags/动态代理.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Spring Bean生命周期","uid":"be477fe08f671338b34bfe6576dd4bfb","slug":"Spring-Bean生命周期","date":"2019-04-16T15:02:12.000Z","updated":"2019-06-04T06:57:21.000Z","comments":true,"path":"api/articles/Spring-Bean生命周期.json","keywords":null,"cover":[],"text":" 本篇文章记录一下Spring中,BeanFactory 与 ApplicationContext 中 bean 的生命周期过程，参考网上资料,总结如下 BeanFactory 当调用者调用 getBean() 想容器请求一个bean时,如果容器注册了 Instantiation...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"spring","slug":"spring","count":3,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":3,"path":"api/tags/spring.json"},{"name":"bean生命周期","slug":"bean生命周期","count":1,"path":"api/tags/bean生命周期.json"},{"name":"ApplicationContext","slug":"ApplicationContext","count":1,"path":"api/tags/ApplicationContext.json"},{"name":"BeanFactory","slug":"BeanFactory","count":1,"path":"api/tags/BeanFactory.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"自己写一个spring-boot-start","uid":"802c655d6d6544d494d9d5e09a52a6ba","slug":"自己写一个spring-boot-start","date":"2019-07-04T11:33:13.000Z","updated":"2022-03-03T15:49:41.563Z","comments":true,"path":"api/articles/自己写一个spring-boot-start.json","keywords":null,"cover":[],"text":" Spring Boot由众多Starter组成，随着版本的推移Starter家族成员也与日俱增。在传统Maven项目中通常将一些层、组件拆分为模块来管理， 以便相互依赖复用，在Spring Boot项目中我们则可以创建自定义Spring Boot Starter来达成该目的。 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"spring","slug":"spring","count":3,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":3,"path":"api/tags/spring.json"},{"name":"springboot","slug":"springboot","count":1,"path":"api/tags/springboot.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}