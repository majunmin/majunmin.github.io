{"name":"动态代理","slug":"动态代理","count":1,"postlist":[{"title":"Spring-AOP详解","uid":"bfa33a5fe2e0aa639906339c30ac4485","slug":"Spring-AOP详解","date":"2019-06-04T06:51:48.000Z","updated":"2022-03-03T15:50:52.810Z","comments":true,"path":"api/articles/Spring-AOP详解.json","keywords":null,"cover":[],"text":"springDOC 将重复性的逻辑代码横切出来其实很容易(我们简单可认为就是封装成一个类就好了)，但我们要将这些被我们横切出来的逻辑代码融合到业务逻辑中，来完成和之前(没抽取前)一样的功能！这就是AOP首要解决的问题了！这样一来，我们就在写业务时只关心业务代码，而不用关心与业务无...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"spring","slug":"spring","count":3,"path":"api/categories/spring.json"}],"tags":[{"name":"spring","slug":"spring","count":3,"path":"api/tags/spring.json"},{"name":"aop","slug":"aop","count":1,"path":"api/tags/aop.json"},{"name":"动态代理","slug":"动态代理","count":1,"path":"api/tags/动态代理.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}