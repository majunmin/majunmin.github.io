{"title":"Intelij-快捷键","uid":"8f865e6ecd68910430d22fc2c9ae4d28","slug":"Intelij-快捷键","date":"2022-07-07T03:20:28.000Z","updated":"2022-10-08T10:33:41.365Z","comments":true,"path":"api/articles/Intelij-快捷键.json","keywords":null,"cover":null,"content":"<h2 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">\nCtrl + Command + G :  选中所有相同的的内容\n\nCtrl + G :            选中下一个相同的内容\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"常用快捷键 Ctrl + Command + G : 选中所有相同的的内容 Ctrl + G : 选中下一个相同的内容 ","link":"","photos":[],"count_time":{"symbolsCount":76,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Intelij","slug":"Intelij","count":1,"path":"api/tags/Intelij.json"},{"name":"快捷键","slug":"快捷键","count":1,"path":"api/tags/快捷键.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE\"><span class=\"toc-text\">常用快捷键</span></a></li></ol>","author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"《架构整洁之道》-读书笔记:7-11章","uid":"5ed57e13aea17add1dca2c51e84aa68f","slug":"《架构整洁之道》-读书笔记-7-11章","date":"2022-07-09T06:01:58.000Z","updated":"2022-10-10T16:06:20.546Z","comments":true,"path":"api/articles/《架构整洁之道》-读书笔记-7-11章.json","keywords":null,"cover":[],"text":"《架构整洁之道》-读书笔记:7-11章架构整洁之道: 第 7-11 章 主要讲的是 设计原则, SOLID,SOLID 的主要作用是告诉我们如何将数据和函数组织称为类,以及如何将这些类链接起来组合成一个程序. 软件构建中层模块主要目标如下: 使软件可容忍被改动. 是软件更容易被理...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"读书笔记","slug":"读书笔记","count":1,"path":"api/tags/读书笔记.json"},{"name":"架构整洁之道","slug":"架构整洁之道","count":1,"path":"api/tags/架构整洁之道.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"算法-线段树","uid":"f618fdcc06390449a60431b1cd6a19c6","slug":"算法-线段树","date":"2022-06-25T02:07:37.000Z","updated":"2022-10-11T04:01:22.019Z","comments":true,"path":"api/articles/算法-线段树.json","keywords":null,"cover":[],"text":"线段树是经常用来维护区间信息的数据结构,线段树可以在 O(logN) 的时间复杂度内实现单点修改,区间修改,区间查询(区间求和,区间最大值,区间最小值) 等操作. 线段树的数据结构 线段树是一种近似的完全二叉树,每个节点代表一个区间,节点的权值. 根节点是整个区间.每个节点的左孩...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"algorithm","slug":"algorithm","count":1,"path":"api/tags/algorithm.json"},{"name":"线段树","slug":"线段树","count":1,"path":"api/tags/线段树.json"},{"name":"区间","slug":"区间","count":1,"path":"api/tags/区间.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}