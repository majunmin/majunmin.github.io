{"title":"JVM-jstat命令解析","uid":"b042f3febe72fcf77aed1d68cd1e61be","slug":"JVM-jstat命令解析","date":"2019-10-16T03:23:24.000Z","updated":"2019-10-16T03:24:55.000Z","comments":true,"path":"api/articles/JVM-jstat命令解析.json","keywords":null,"cover":null,"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JDK8<br>jstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下: </p></blockquote>\n<span id=\"more\"></span>\n\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">jstat [-命令选项] [vmid] [间隔时间&#x2F;毫秒] [查询次数]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"类加载统计\"><a href=\"#类加载统计\" class=\"headerlink\" title=\"类加载统计\"></a>类加载统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -class [pid]\n\nLoaded  Bytes  Unloaded  Bytes     Time\n 10701 20086.0        0     0.0       5.62<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>Loaded: 加载class的数量</li>\n<li>Bytes: 所占用空间大小</li>\n<li>Unloaded: 未加载数量</li>\n<li>Bytes: 未加载占用空间</li>\n<li>Time: 时间</li>\n</ul>\n<h2 id=\"编译统计\"><a href=\"#编译统计\" class=\"headerlink\" title=\"编译统计\"></a>编译统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -compiler [pid]\n\nCompiled Failed Invalid   Time   FailedType FailedMethod\n    5642      6       0     1.51          1 com&#x2F;sun&#x2F;beans&#x2F;TypeResolver prepare<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>Compiled: 编译数量。</li>\n<li>Failed: 失败数量</li>\n<li>Invalid: 不可用数量</li>\n<li>Time: 时间</li>\n<li>FailedType: 失败类型</li>\n<li>FailedMethod: 失败的方法</li>\n<li>Compiled: 编译数量。</li>\n<li>Failed: 失败数量</li>\n<li>Invalid: 不可用数量</li>\n<li>Time: 时间</li>\n<li>FailedType: 失败类型</li>\n<li>FailedMethod: 失败的方法</li>\n</ul>\n<h2 id=\"垃圾回收统计\"><a href=\"#垃圾回收统计\" class=\"headerlink\" title=\"垃圾回收统计\"></a>垃圾回收统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gc [pid]\n\n S0C    S1C    S0U    S1U      EC       EU        OC         OU       MC     MU    CCSC   CCSU   YGC     YGCT    FGC    FGCT     GCT\n157248.0 157248.0  0.0   42754.5 1258368.0 1110221.2 2621440.0     0.0     38528.0 36701.5 5248.0 4838.0      1    0.041   0      0.000    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>S0C: 第一个幸存区的大小</li>\n<li>S1C: 第二个幸存区的大小</li>\n<li>S0U: 第一个幸存区的使用大小</li>\n<li>S1U: 第二个幸存区的使用大小</li>\n<li>EC: Eden 的大小</li>\n<li>EU: Eden 的使用大小</li>\n<li>OC: 老年代大小</li>\n<li>OU: 老年代使用大小</li>\n<li>MC: 方法区大小</li>\n<li>MU: 方法区使用大小</li>\n<li>CCSC:压缩类空间大小</li>\n<li>CCSU:压缩类空间使用大小</li>\n<li>YGC: 年轻代垃圾回收次数</li>\n<li>YGCT: 年轻代垃圾回收消耗时间</li>\n<li>FGC: 老年代垃圾回收次数</li>\n<li>FGCT: 老年代垃圾回收消耗时间</li>\n<li>GCT: 垃圾回收消耗总时间</li>\n</ul>\n<h2 id=\"堆内存统计\"><a href=\"#堆内存统计\" class=\"headerlink\" title=\"堆内存统计\"></a>堆内存统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gccapacity [pid]\n\n NGCMN    NGCMX     NGC     S0C   S1C       EC      OGCMN      OGCMX       OGC         OC       MCMN     MCMX      MC     CCSMN    CCSMX     CCSC    YGC    FGC\n1572864.0 1572864.0 1572864.0 157248.0 157248.0 1258368.0  2621440.0  2621440.0  2621440.0  2621440.0      0.0 1083392.0  38528.0      0.0 1048576.0   5248.0      1     0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>NGCMN: 新生代最小容量</li>\n<li>NGCMX: 新生代最大容量</li>\n<li>NGC: 当前新生代容量</li>\n<li>S0C: 第一个幸存区大小</li>\n<li>S1C: 第二个幸存区的大小</li>\n<li>EC: Eden区的大小</li>\n<li>OGCMN: 老年代最小容量</li>\n<li>OGCMX: 老年代最大容量</li>\n<li>OGC: 当前老年代大小</li>\n<li>OC:当前老年代大小</li>\n<li>MCMN:最小元数据容量</li>\n<li>MCMX: 最大元数据容量</li>\n<li>MC: 当前元数据空间大小</li>\n<li>CCSMN: 最小压缩类空间大小</li>\n<li>CCSMX: 最大压缩类空间大小</li>\n<li>CCSC: 当前压缩类空间大小</li>\n<li>YGC: 年轻代gc次数</li>\n<li>FGC: 老年代GC次数</li>\n</ul>\n<h2 id=\"新生代垃圾回收统计\"><a href=\"#新生代垃圾回收统计\" class=\"headerlink\" title=\"新生代垃圾回收统计\"></a>新生代垃圾回收统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcnew [pid]\n\n S0C    S1C    S0U    S1U   TT MTT  DSS      EC       EU     YGC     YGCT\n157248.0 157248.0    0.0 42754.5  6   6 78624.0 1258368.0 1143777.8      1    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"新生代内存统计\"><a href=\"#新生代内存统计\" class=\"headerlink\" title=\"新生代内存统计\"></a>新生代内存统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcnewcapacity [pid]\n\n  NGCMN      NGCMX       NGC      S0CMX     S0C     S1CMX     S1C       ECMX        EC      YGC   FGC\n 1572864.0  1572864.0  1572864.0 157248.0 157248.0 157248.0 157248.0  1258368.0  1258368.0     1     0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"老年代垃圾回收统计\"><a href=\"#老年代垃圾回收统计\" class=\"headerlink\" title=\"老年代垃圾回收统计\"></a>老年代垃圾回收统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcold [pid]\n\n   MC       MU      CCSC     CCSU       OC          OU       YGC    FGC    FGCT     GCT\n 38528.0  36701.5   5248.0   4838.0   2621440.0         0.0      1     0    0.000    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"老年代内存统计\"><a href=\"#老年代内存统计\" class=\"headerlink\" title=\"老年代内存统计\"></a>老年代内存统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcoldcapacity [pid]\n\n   OGCMN       OGCMX        OGC         OC       YGC   FGC    FGCT     GCT\n  2621440.0   2621440.0   2621440.0   2621440.0     1     0    0.000    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"元数据空间统计\"><a href=\"#元数据空间统计\" class=\"headerlink\" title=\"元数据空间统计\"></a>元数据空间统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcmetacapacity [pid]\n\n   MCMN       MCMX        MC       CCSMN      CCSMX       CCSC     YGC   FGC    FGCT     GCT\n       0.0  1083392.0    38528.0        0.0  1048576.0     5248.0     1     0    0.000    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>MCMN: 最小元数据容量</li>\n<li>MCMX: 最大元数据容量</li>\n<li>MC: 当前元数据空间大小</li>\n<li>CCSMN: 最小压缩类空间大小</li>\n<li>CCSMX: 最大压缩类空间大小</li>\n<li>CCSC: 当前压缩类空间大小</li>\n<li>YGC: 年轻代垃圾回收次数</li>\n<li>FGC: 老年代垃圾回收次数</li>\n<li>FGCT: 老年代垃圾回收消耗时间</li>\n<li>GCT: 垃圾回收消耗总时间</li>\n</ul>\n<h2 id=\"垃圾回收统计-1\"><a href=\"#垃圾回收统计-1\" class=\"headerlink\" title=\"垃圾回收统计\"></a>垃圾回收统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -gcutil [pid]\n\n  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT\n  0.00  27.19  90.89   0.00  95.26  92.19      1    0.041     0    0.000    0.041<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>S0: 幸存1区当前使用比例</li>\n<li>S1: 幸存2区当前使用比例</li>\n<li>E: Eden 区使用比例</li>\n<li>O: 老年代使用比例</li>\n<li>M: 元数据区使用比例</li>\n<li>CCS: 压缩使用比例</li>\n<li>YGC: 年轻代垃圾回收次数</li>\n<li>FGC: 老年代垃圾回收次数</li>\n<li>FGCT: 老年代垃圾回收消耗时间</li>\n<li>GCT: 垃圾回收消耗总时间</li>\n</ul>\n<h2 id=\"JVM编译方法统计\"><a href=\"#JVM编译方法统计\" class=\"headerlink\" title=\"JVM编译方法统计\"></a>JVM编译方法统计</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">jstat -printcompilation [pid]\n\nCompiled  Size  Type Method\n    5773     18    1 com&#x2F;alibaba&#x2F;fastjson&#x2F;serializer&#x2F;SerializeWriter isEnabled<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ul>\n<li>Compiled: 最近编译方法的数量</li>\n<li>Size: 最近编译方法的字节码数量</li>\n<li>Type: 最近编译方法的编译类型</li>\n<li>Method: 方法名标识</li>\n</ul>\n","text":" JDK8jstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下: jstat [-命令选项] [vmid] [间隔时间&#x2F;毫秒] [查询次数] 类加载统计jstat -class [pid] Loaded Bytes Unloaded Bytes ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"jvm","slug":"jvm","count":1,"path":"api/categories/jvm.json"}],"tags":[{"name":"jvm","slug":"jvm","count":1,"path":"api/tags/jvm.json"},{"name":"jstat","slug":"jstat","count":1,"path":"api/tags/jstat.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%8A%A0%E8%BD%BD%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">类加载统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">编译统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">垃圾回收统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A0%86%E5%86%85%E5%AD%98%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">堆内存统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E7%94%9F%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">新生代垃圾回收统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B0%E7%94%9F%E4%BB%A3%E5%86%85%E5%AD%98%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">新生代内存统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%80%81%E5%B9%B4%E4%BB%A3%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">老年代垃圾回收统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%80%81%E5%B9%B4%E4%BB%A3%E5%86%85%E5%AD%98%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">老年代内存统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%83%E6%95%B0%E6%8D%AE%E7%A9%BA%E9%97%B4%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">元数据空间统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E7%BB%9F%E8%AE%A1-1\"><span class=\"toc-text\">垃圾回收统计</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JVM%E7%BC%96%E8%AF%91%E6%96%B9%E6%B3%95%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">JVM编译方法统计</span></a></li></ol>","author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Maven dependency Scope","uid":"53e5f1b621546948c5c24222a62321d5","slug":"Maven-dependency-Scope","date":"2020-09-14T07:21:10.000Z","updated":"2020-09-14T07:24:54.000Z","comments":true,"path":"api/articles/Maven-dependency-Scope.json","keywords":null,"cover":null,"text":"官网-scope描述 Maven 的作用域分为6种 optional(可选的) compile 默认的scope，表示 dependency 都可以在整个生命周期(编译 运行 测试)中使用. 而且这些dependencies 可以传递依赖 provided 跟compile相似，...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"maven","slug":"maven","count":1,"path":"api/categories/maven.json"}],"tags":[{"name":"maven","slug":"maven","count":2,"path":"api/tags/maven.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"linux下监控实时网速","uid":"3191f51398b532ce218b33ad1c80d29d","slug":"linux下监控实时网速","date":"2019-08-13T09:48:52.000Z","updated":"2020-09-14T07:22:38.000Z","comments":true,"path":"api/articles/linux下监控实时网速.json","keywords":null,"cover":[],"text":" NetHogs是一个小型的’net top’工具,不像大多数工具那样拖慢每个协议或者是每个子网的速度而是按照进程进行带宽分组.NetHogs NetHogs不需要依赖载入某个特殊的内核模块. 如果发生了网络阻塞你可以启动NetHogs立即看到哪个PID造成的这种状况.这样就很容...","link":"","photos":[],"count_time":{"symbolsCount":472,"symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":2,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":2,"path":"api/tags/linux.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}