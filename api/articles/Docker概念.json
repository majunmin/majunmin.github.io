{"title":"Docker概念","uid":"409a977ec1b75954f9585ba9c4856d49","slug":"Docker概念","date":"2019-07-20T07:30:19.000Z","updated":"2022-03-03T15:49:51.094Z","comments":true,"path":"api/articles/Docker概念.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>了解一下Docker 概念，如今容器技术在互联网行业发展的已经相当成熟，<br>springBoot 微服务 结合 k8s 部署线上服务，安全 高效，充分利用机器资源</p></blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"✨镜像\"><a href=\"#✨镜像\" class=\"headerlink\" title=\"✨镜像\"></a>✨镜像</h2><p>镜像是一种轻量级、可执行的独立软件包，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。</p>\n<p>镜像使用分层存储</p>\n<h2 id=\"✨容器\"><a href=\"#✨容器\" class=\"headerlink\" title=\"✨容器\"></a>✨容器</h2><p>容器是镜像的运行时实例 - 实际执行时镜像会在内存中变成什么。默认情况下，它完全独立于主机环境运行，仅在配置为访问主机文件和端口的情况下才执行此操作。</p>\n<p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全，占用的内存不超过任何其他可执行文件。</p>\n<p>镜像使用的是分层存储，容器也是如此。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。</p>\n<p>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。</p>\n<p>容器可以被创建、启动、停止、删除、暂停等</p>\n<p><img src=\"/post/Docker%E6%A6%82%E5%BF%B5/Container.png\" alt=\"Container\"><br><img src=\"/post/Docker%E6%A6%82%E5%BF%B5/VM.png\" alt=\"VM\"></p>\n<h2 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h2><p>在分布式应用中，应用的不同部分称为“服务”。例如，假设有一个视频共享网站，它可能提供用于在数据库中存储应用程序数据的服务、用于在用户上传一些内容后在后台进行视频转码的服务、用于前端的服务等。</p>\n<p>服务实际上是“生产中的容器”。一项服务仅运行一个镜像，但它会编制镜像的运行方式 - 它应使用的端口、容器的多少个从节点应运行才能使服务的容量满足其需求等。扩展服务将更改运行该软件的容器实例数，并将多个计算资源分配给进程中的服务。</p>\n<h2 id=\"Swarm\"><a href=\"#Swarm\" class=\"headerlink\" title=\"Swarm\"></a>Swarm</h2><p>swarm 是一组运行 Docker 并且已加入集群中的机器.执行此操作后,可以继续运行已使用的 Docker 命令,但现在它们在集群上由 swarm 管理节点执行。<br>swarm 中的机器可以为物理或虚拟机。加入 swarm 后，可以将它们称为节点。</p>\n<h2 id=\"✨镜像仓库-Repository\"><a href=\"#✨镜像仓库-Repository\" class=\"headerlink\" title=\"✨镜像仓库  Repository\"></a>✨镜像仓库  Repository</h2><p>镜像仓库是一组 Docker 镜像。可以通过将<strong>镜像仓库</strong>推送到<strong>镜像库</strong>服务器来对其进行共享。</p>\n<p>通常,一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 &lt;仓库名&gt;:&lt;标签&gt; 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 latest 作为默认标签。</p>\n<h2 id=\"✨镜像库-Docker-Registy\"><a href=\"#✨镜像库-Docker-Registy\" class=\"headerlink\" title=\"✨镜像库 Docker Registy\"></a>✨镜像库 Docker Registy</h2><p>一个镜像仓库中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。</p>\n<p><strong>镜像库</strong>是一项包含<strong>镜像仓库</strong>的托管服务</p>\n<p><a href=\"https://hub.docker.com/\">Docker Hub</a></p>\n<h2 id=\"分层存储\"><a href=\"#分层存储\" class=\"headerlink\" title=\"分层存储\"></a>分层存储</h2><p>因为镜像包含操作系统完整的 root 文件系统，其体积往往是庞大的，因此在 Docker 设计时，就充分利用 Union FS 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。</p>\n<p>镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。</p>\n<p>分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。</p>\n<p>链接: <a href=\"https://docs.docker-cn.com/glossary/?term=%E6%A6%82%E5%BF%B5\">概念</a></p>\n","text":" 了解一下Docker 概念，如今容器技术在互联网行业发展的已经相当成熟，springBoot 微服务 结合 k8s 部署线上服务，安全 高效，充分利用机器资源 ✨镜像镜像是一种轻量级、可执行的独立软件包，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"docker","slug":"docker","count":1,"path":"api/categories/docker.json"}],"tags":[{"name":"docker","slug":"docker","count":2,"path":"api/tags/docker.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9C%A8%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">✨镜像</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9C%A8%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">✨容器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">服务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Swarm\"><span class=\"toc-text\">Swarm</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9C%A8%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93-Repository\"><span class=\"toc-text\">✨镜像仓库  Repository</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%9C%A8%E9%95%9C%E5%83%8F%E5%BA%93-Docker-Registy\"><span class=\"toc-text\">✨镜像库 Docker Registy</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E5%B1%82%E5%AD%98%E5%82%A8\"><span class=\"toc-text\">分层存储</span></a></li></ol>","author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"redis-info命令详解","uid":"37aab8e3df469d14892fd29b0404f0e2","slug":"redis-info命令详解","date":"2019-07-22T09:44:36.000Z","updated":"2019-07-22T09:46:17.000Z","comments":true,"path":"api/articles/redis-info命令详解.json","keywords":null,"cover":null,"text":" redis info 命令详解 192.168.5.244(192.168.5.244:7001)&gt;info all &quot;# Server redis_version:3.0.6 redis_git_sha1:00000000 redis_git_dirty:0 ...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"redis","slug":"redis","count":1,"path":"api/categories/redis.json"}],"tags":[{"name":"redis","slug":"redis","count":1,"path":"api/tags/redis.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux常用命令","uid":"596309cd0250881615133cb44c237a29","slug":"Linux常用命令","date":"2019-07-20T07:03:53.000Z","updated":"2022-10-08T10:36:09.639Z","comments":true,"path":"api/articles/Linux常用命令.json","keywords":null,"cover":[],"text":" 记录一下 CentO7 中常用的命令 命令： rpm -q package-name #检查包是否被安装 rpm -qa #列出所有安装的包 shell 脚本参数 传参数$$$ 变量 含义 $0 当前脚本的文件名 $n 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"linux","slug":"linux","count":2,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":2,"path":"api/tags/linux.json"},{"name":"centos7","slug":"centos7","count":1,"path":"api/tags/centos7.json"}],"author":{"name":"majm","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"技术分享","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}